I"w<p><span style="font-weight: bold;">Script to get number of lines in a file:</span><br /><br />REM %1 is the file name to be parsed, passed at command line<br /><br />&lt;blockquote&gt;@set count=0<br />for /f %%a in (%1) do (<br />@set /a count+=1<br />)<br /><br />@echo %count%&lt;/blockquote&gt;<br /><br /><span style="font-weight: bold;">Script that will look at each entry (no spaces) in a file (called seq_no_t3.csv in my example) and search for lines that have an exact match with the string (ie “^string$”) in a list of files (specified by adroms*_replies.txt in my example) and output the string “string,file_name” followed by an extra \n in an output file (called loc_matches_2.txt in my example). Also, it will constantly echo to the screen the line number on which it is currently working on from input file.</span><br /><br />&lt;blockquote&gt;@echo off<br />@setlocal<br /><br />set count=0<br />for /f %%i in (‘type .\seq_no_t3.csv’) do (<br />set /a count+=1<br />set count<br /><!--nul (set /p tmp=%%i) -->&lt;nul (set /p tmp=%%i) &gt;<nul tmp="%%i)"><nul tmp="%%i)"><nul tmp="%%i)"><nul tmp="%%i)"><nul tmp="%%i)"><nul tmp="%%i)">&gt; loc_matches_2.txt<br /><nul tmp=",)"></nul></nul><nul tmp=",)"><nul tmp="%%i)"><nul tmp=",)"></nul></nul></nul></nul><nul tmp=",)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%i)"><nul tmp=",)"></nul></nul></nul></nul></nul></nul><nul tmp=",)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%i)"><nul tmp=",)"></nul></nul></nul></nul></nul></nul></nul></nul><!--nul (set /p tmp=,) --></nul></nul>&lt;nul (set /p tmp=,) &gt;&gt;<nul tmp="%%i)"><nul tmp="%%i)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%i)"><nul tmp=",)"> loc_matches_2.txt<br />for /f %%j in (\findstr /m /r "^%%i$" adroms*_replies.txt') do (<br /><nul tmp="%%j)"></nul></nul></nul><nul tmp="%%j)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"></nul></nul></nul></nul></nul></nul><nul tmp="%%j)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"></nul></nul></nul></nul></nul></nul></nul></nul></nul><nul tmp="%%j)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"></nul></nul></nul></nul></nul></nul></nul></nul></nul></nul></nul></nul><!--nul (set /p tmp=%%j) --></nul></nul></nul></nul>&lt;nul (set /p tmp=%%j) &gt;&gt;<nul tmp="%%i)"><nul tmp="%%i)"><nul tmp="%%i)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"> loc_matches_2.txt<br />)<br />@echo. &gt;&gt; loc_matches_2.txt<br />)<br /><br />@endlocal<br />@echo on</nul></nul></nul></nul></nul></nul></nul></nul></nul></nul></nul></nul></nul></nul></nul></nul></nul></nul>&lt;/blockquote&gt;<nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"><nul tmp="%%i)"><nul tmp=",)"><nul tmp="%%j)"><br /><br />This script has several interesting things going on. Apart from the use of the relatively powerful for loop (where in this case the default delimiter of <space> or <enter> is being used), the lines starting with<span style="font-weight: bold;"> <nul><span style="font-weight: bold;"> </span></nul></span>will pipe a <span style="font-style: italic;">nul</span> response to set /p so that the variable remains unchanged. Due to the quirky way <span style="font-style: italic;">set</span> works, set /p prints the value <span style="font-style: italic;">to the right</span> of the equals sign, not the value of the variable itself. Therefore, you're not changing the value of the %tmp% variable yet you are appending %%i/,/%%j to the file <span style="font-weight: bold;">with no CRLF</span>! (see source).<br /><br />Pending fixes:<br />1.- Fix issue where blank lines (actually they have space characters) are printed to output file<br />2.- Fix issue where if the input string is matched in several files, a list of files (where delim=CRLF) is appended to the line corresponding to the input string. Hence there will be lines with no comma separation - instead they will have a file name where the last input string was found.<br /><br /></enter></space></nul></nul></nul></nul></nul></nul></nul></nul></nul></p>
:ET