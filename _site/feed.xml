<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-01-30T11:48:25-04:00</updated><id>http://localhost:4000//</id><title type="html">cat llorllale | grep -v ‘BS’</title><subtitle>Ops support, programmer, budding enterprise architect, powerlifter, guitar player (maybe).
</subtitle><author><name>George Aristy</name></author><entry><title type="html">Migration to Github Pages</title><link href="http://localhost:4000/2017/01/30/migration-to-github-pages.html" rel="alternate" type="text/html" title="Migration to Github Pages" /><published>2017-01-30T10:17:00-04:00</published><updated>2017-01-30T10:17:00-04:00</updated><id>http://localhost:4000/2017/01/30/migration-to-github-pages</id><content type="html" xml:base="http://localhost:4000/2017/01/30/migration-to-github-pages.html">&lt;p&gt;&lt;strong&gt;Welcome to the new blog!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’m sunsetting the old &lt;a href=&quot;http://llorllale.blogspot.com/&quot;&gt;blog&lt;/a&gt; and migrating all posts here, closer to my public code.&lt;/p&gt;

&lt;p&gt;The move also allows version control (always welcome) and better automation (via ‘git push’ to master branch).&lt;/p&gt;

&lt;p&gt;I’m using &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt; to build this blog. Things I’ve yet to properly figure out:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Preferred comment system. Apparently, minima only supports disqus out-of-the-box and I’m afraid of ads introduced through it.&lt;/li&gt;
  &lt;li&gt;A decent theme for this blog. I’ve enabled jekyll’s default &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;theme&lt;/a&gt; for now since the one I liked best doesn’t work on jekyll 3.3.1 (the version that github &lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;currently supports&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;How to properly link to my &lt;a href=&quot;https://www.linkedin.com/in/georgearisty&quot;&gt;linkedin profile&lt;/a&gt;. The minima theme doesn’t seem to support it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;What I’ll be posting about&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’ve always had a passion for programming, and I’m a strong believer in the open-source movement, so I’ll definitely be writing related to that. Checkout my code at &lt;a href=&quot;http://github.com/llorllale&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On the personal level, I’ve been passionate about powerlifting for around 18 months or so, so look out for a few posts here and there on that. And, perhaps - &lt;em&gt;drum roll&lt;/em&gt; - if I ever get serious again about guitar playing, I’ll be posting some of that as well!&lt;/p&gt;</content><author><name>George Aristy</name></author><category term="blog" /><summary type="html">Welcome to the new blog!</summary></entry><entry><title type="html">JDeveloper 11g: SOA composite referencing 2-way-SSL-enabled webservice at design+deployment time</title><link href="http://localhost:4000/2015/12/30/jdeveloper-11g-soa-composite.html" rel="alternate" type="text/html" title="JDeveloper 11g: SOA composite referencing 2-way-SSL-enabled webservice at design+deployment time" /><published>2015-12-30T17:23:00-04:00</published><updated>2015-12-30T17:23:00-04:00</updated><id>http://localhost:4000/2015/12/30/jdeveloper-11g-soa-composite</id><content type="html" xml:base="http://localhost:4000/2015/12/30/jdeveloper-11g-soa-composite.html">I just spent an embarrassingly long time figuring this out.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Design Time&lt;/b&gt;&lt;br /&gt;You're designing your composite and you need to integrate it with some external web service over SSL. You attempt to add the partner link and it may fail right away (cannot read WSDL) OR it may read it BUT JDeveloper's schema validator may fail to parse the service' schema.&lt;br /&gt;&lt;b&gt; &lt;/b&gt;&lt;br /&gt;Review your HTTPS Credentials (Tools -&amp;gt; Preferences -&amp;gt; Credentials -&amp;gt; HTTPS Credential) settings and also &lt;u&gt;&lt;b&gt;make sure you've set up your keystores and truststores correctly&lt;/b&gt;&lt;/u&gt;. There is plenty of documentation regarding SSL, keystores and keytool (albeit all a bit confusing, at least for me) out there.&lt;br /&gt;&lt;br /&gt;Easy.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Deployment Time&lt;/b&gt;&lt;br /&gt;This is where you will get the dreaded &quot;&lt;span style=&quot;color: red;&quot;&gt;&lt;b&gt;received fatal_alert: bad_certificate&lt;/b&gt;&lt;/span&gt;&quot;. This part vexed me. If the above was done right, why is compilation/deployment failing?&lt;br /&gt;&lt;br /&gt;&lt;b&gt;The issue is that the HTTPS Credential settings are applied only on the process that performs the schema validation, and not the one that does the final compilation/deployment.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Add these entries to your jdev.conf ($MWHOME/jdeveloper/jdev/bin/jdev.conf):&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;AddVMOption -Dweblogic.security.SSL.enableJSSE=true (this one might not be required)&lt;/li&gt;&lt;li&gt;AddVMOption -Djavax.net.ssl.trustStore=PATH_TO_HTTPSCREDENTIAL_TRUSTSTORE&lt;path_to_httpscredential_truststore&gt;&lt;/path_to_httpscredential_truststore&gt;&lt;/li&gt;&lt;li&gt;AddVMOption -Djavax.net.ssl.trustStorePassword=TRUSTSTORE_PWD&lt;truststore_pwd&gt;&lt;/truststore_pwd&gt;&lt;/li&gt;&lt;li&gt;AddVMOption -Djavax.net.ssl.keyStore=PATH_TO_HTTPSCREDENTIAL_KEYSTORE&lt;path_to_httpscredential_keystore&gt;&lt;/path_to_httpscredential_keystore&gt;&lt;/li&gt;&lt;li&gt;AddVMOption -Djavax.net.ssl.keyStorePassword=KEYSTORE_PWD&lt;keystore_pwd&gt;&lt;/keystore_pwd&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;Restart JDeveloper. You're welcome.</content><author><name>George Aristy</name></author><category term="11g" /><category term="jdeveloper" /><category term="ssl" /><category term="bad_certificate" /><summary type="html">I just spent an embarrassingly long time figuring this out.Design TimeYou're designing your composite and you need to integrate it with some external web service over SSL. You attempt to add the partner link and it may fail right away (cannot read WSDL) OR it may read it BUT JDeveloper's schema validator may fail to parse the service' schema. Review your HTTPS Credentials (Tools -&amp;gt; Preferences -&amp;gt; Credentials -&amp;gt; HTTPS Credential) settings and also make sure you've set up your keystores and truststores correctly. There is plenty of documentation regarding SSL, keystores and keytool (albeit all a bit confusing, at least for me) out there.Easy.Deployment TimeThis is where you will get the dreaded &quot;received fatal_alert: bad_certificate&quot;. This part vexed me. If the above was done right, why is compilation/deployment failing?The issue is that the HTTPS Credential settings are applied only on the process that performs the schema validation, and not the one that does the final compilation/deployment.Add these entries to your jdev.conf ($MWHOME/jdeveloper/jdev/bin/jdev.conf):AddVMOption -Dweblogic.security.SSL.enableJSSE=true (this one might not be required)AddVMOption -Djavax.net.ssl.trustStore=PATH_TO_HTTPSCREDENTIAL_TRUSTSTOREAddVMOption -Djavax.net.ssl.trustStorePassword=TRUSTSTORE_PWDAddVMOption -Djavax.net.ssl.keyStore=PATH_TO_HTTPSCREDENTIAL_KEYSTOREAddVMOption -Djavax.net.ssl.keyStorePassword=KEYSTORE_PWDRestart JDeveloper. You're welcome.</summary></entry><entry><title type="html">Maven: error due to attempt to deploy “sources” artifact twice</title><link href="http://localhost:4000/2015/11/25/maven-error-due-to-attempt-to-deploy.html" rel="alternate" type="text/html" title="Maven: error due to attempt to deploy &quot;sources&quot; artifact twice" /><published>2015-11-25T09:37:00-04:00</published><updated>2015-11-25T09:37:00-04:00</updated><id>http://localhost:4000/2015/11/25/maven-error-due-to-attempt-to-deploy</id><content type="html" xml:base="http://localhost:4000/2015/11/25/maven-error-due-to-attempt-to-deploy.html">Unable to get rid of the 400 error when running a build to deploy your artifact to a maven repository? Have you read about how the sources:jar goal is &lt;a href=&quot;http://blog.peterlynch.ca/2010/05/maven-how-to-prevent-generate-sources.html&quot; target=&quot;_blank&quot;&gt;executed twice&lt;/a&gt; and then tried &lt;a href=&quot;http://stackoverflow.com/a/10794985&quot; target=&quot;_blank&quot;&gt;overriding&lt;/a&gt; that behavior? Still not working?&lt;br /&gt;&lt;br /&gt;Well, if you're like me and you are blindly running your build from Netbeans, you might want to verify that you're not executing both the &lt;a href=&quot;https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference&quot; target=&quot;_blank&quot;&gt;install and deploy&lt;/a&gt; goals. Run them separately and your artifact should be uploaded to your repo without issue. :)</content><author><name>George Aristy</name></author><summary type="html">Unable to get rid of the 400 error when running a build to deploy your artifact to a maven repository? Have you read about how the sources:jar goal is executed twice and then tried overriding that behavior? Still not working?Well, if you're like me and you are blindly running your build from Netbeans, you might want to verify that you're not executing both the install and deploy goals. Run them separately and your artifact should be uploaded to your repo without issue. :)</summary></entry><entry><title type="html">Java Collections waste (or lack thereof)</title><link href="http://localhost:4000/2014/02/13/java-collections-waste-or-lack-thereof.html" rel="alternate" type="text/html" title="Java Collections waste (or lack thereof)" /><published>2014-02-13T07:40:00-04:00</published><updated>2014-02-13T07:40:00-04:00</updated><id>http://localhost:4000/2014/02/13/java-collections-waste-or-lack-thereof</id><content type="html" xml:base="http://localhost:4000/2014/02/13/java-collections-waste-or-lack-thereof.html">&lt;p dir=&quot;ltr&quot;&gt;If you are a performance freak who makes sure every collection is initialized with the &quot;right&quot; size then don't be: http://java.dzone.com/articles/java-collection-waste.&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;In all fairness, notice the&amp;#160; caveat at the end, though I also suspect that won't be an issue. :)&lt;/p&gt;</content><author><name>George Aristy</name></author><category term="collections" /><category term="heap" /><category term="java" /><summary type="html">If you are a performance freak who makes sure every collection is initialized with the &quot;right&quot; size then don't be: http://java.dzone.com/articles/java-collection-waste.In all fairness, notice the&amp;#160; caveat at the end, though I also suspect that won't be an issue. :)</summary></entry><entry><title type="html">A note on Weblogic JMS Queue pending + current messages count</title><link href="http://localhost:4000/2013/11/02/a-note-on-weblogic-jms-queue-pending.html" rel="alternate" type="text/html" title="A note on Weblogic JMS Queue pending + current messages count" /><published>2013-11-02T11:03:00-04:00</published><updated>2013-11-02T11:03:00-04:00</updated><id>http://localhost:4000/2013/11/02/a-note-on-weblogic-jms-queue-pending</id><content type="html" xml:base="http://localhost:4000/2013/11/02/a-note-on-weblogic-jms-queue-pending.html">Recently I had to perform some load tests on an application that received its input via a Weblogic JMS queue, hence making the rate of message consumption one of the key metrics to keep track of and compare to a known standard.&lt;br /&gt;&lt;br /&gt;Developing the WLST script proved a bit challenging only for the fact that all documentation of what constitutes &quot;total pending messages&quot; in the queue is a bit ambiguous (Oracle Weblogic's own documentation being the worst of all). So I did a little digging around and some experimenting and present to you here a graph which I think illustrates quite succinctly what it's all about:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-9NoC6SLgCH8/UnUSVo1jhSI/AAAAAAAAAQo/GBW1kC7WF5M/s1600/image001.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://2.bp.blogspot.com/-9NoC6SLgCH8/UnUSVo1jhSI/AAAAAAAAAQo/GBW1kC7WF5M/s400/image001.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&quot;Messages pending&quot; seem to be the working buffer (tier 1) from where the MDBs consume the messages. &quot;Messages current&quot; seem to be a secondary buffer (tier 2, probably serialized to disk) which are fed into &quot;messages pending&quot; whenever there's available capacity in the latter.&lt;br /&gt;&lt;br /&gt;For proof, notice how &quot;messages current&quot; starts climbing only after &quot;messages pending&quot; has reached a certain level, and notice how &quot;messages current&quot; is the first to drop to zero, after which &quot;messages pending&quot; falls to zero as well.&lt;br /&gt;&lt;br /&gt;By the way, &quot;messages processed&quot; in the graph was calculated using the simple formula: msgs_received - (msgs_current + msgs_pending).</content><author><name>George Aristy</name></author><category term="jms" /><category term="weblogic" /><summary type="html">Recently I had to perform some load tests on an application that received its input via a Weblogic JMS queue, hence making the rate of message consumption one of the key metrics to keep track of and compare to a known standard.Developing the WLST script proved a bit challenging only for the fact that all documentation of what constitutes &quot;total pending messages&quot; in the queue is a bit ambiguous (Oracle Weblogic's own documentation being the worst of all). So I did a little digging around and some experimenting and present to you here a graph which I think illustrates quite succinctly what it's all about:&quot;Messages pending&quot; seem to be the working buffer (tier 1) from where the MDBs consume the messages. &quot;Messages current&quot; seem to be a secondary buffer (tier 2, probably serialized to disk) which are fed into &quot;messages pending&quot; whenever there's available capacity in the latter.For proof, notice how &quot;messages current&quot; starts climbing only after &quot;messages pending&quot; has reached a certain level, and notice how &quot;messages current&quot; is the first to drop to zero, after which &quot;messages pending&quot; falls to zero as well.By the way, &quot;messages processed&quot; in the graph was calculated using the simple formula: msgs_received - (msgs_current + msgs_pending).</summary></entry><entry><title type="html">The Case of the Sudden OC4J Restarts [part 2]</title><link href="http://localhost:4000/2013/04/16/the-case-of-sudden-oc4j-restarts-part-2.html" rel="alternate" type="text/html" title="The Case of the Sudden OC4J Restarts [part 2]" /><published>2013-04-16T22:11:00-04:00</published><updated>2013-04-16T22:11:00-04:00</updated><id>http://localhost:4000/2013/04/16/the-case-of-sudden-oc4j-restarts-part-2</id><content type="html" xml:base="http://localhost:4000/2013/04/16/the-case-of-sudden-oc4j-restarts-part-2.html">&lt;html&gt; &lt;head&gt;&lt;meta http-equiv=Content-Type content=&quot;text/html; charset=windows-1252&quot;&gt;&lt;meta name=Generator content=&quot;Microsoft Word 12 (filtered)&quot;&gt;&lt;style&gt;&lt;!--  /* Font Definitions */  @font-face  {font-family:Wingdings;  panose-1:5 0 0 0 0 0 0 0 0 0;} @font-face  {font-family:&quot;Cambria Math&quot;;  panose-1:2 4 5 3 5 4 6 3 2 4;} @font-face  {font-family:Cambria;  panose-1:2 4 5 3 5 4 6 3 2 4;} @font-face  {font-family:Calibri;  panose-1:2 15 5 2 2 2 4 3 2 4;} @font-face  {font-family:Tahoma;  panose-1:2 11 6 4 3 5 4 4 2 4;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal  {margin-top:0in;  margin-right:0in;  margin-bottom:10.0pt;  margin-left:0in;  line-height:115%;  font-size:11.0pt;  font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;} h1  {mso-style-link:&quot;Heading 1 Char&quot;;  margin-top:24.0pt;  margin-right:0in;  margin-bottom:0in;  margin-left:0in;  margin-bottom:.0001pt;  line-height:115%;  page-break-after:avoid;  font-size:14.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#365F91;} p.MsoTitle, li.MsoTitle, div.MsoTitle  {mso-style-link:&quot;Title Char&quot;;  margin-top:0in;  margin-right:0in;  margin-bottom:15.0pt;  margin-left:0in;  border:none;  padding:0in;  font-size:26.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst  {mso-style-link:&quot;Title Char&quot;;  margin:0in;  margin-bottom:.0001pt;  border:none;  padding:0in;  font-size:26.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle  {mso-style-link:&quot;Title Char&quot;;  margin:0in;  margin-bottom:.0001pt;  border:none;  padding:0in;  font-size:26.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast  {mso-style-link:&quot;Title Char&quot;;  margin-top:0in;  margin-right:0in;  margin-bottom:15.0pt;  margin-left:0in;  border:none;  padding:0in;  font-size:26.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} a:link, span.MsoHyperlink  {color:blue;  text-decoration:underline;} a:visited, span.MsoHyperlinkFollowed  {color:purple;  text-decoration:underline;} p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap  {mso-style-link:&quot;Document Map Char&quot;;  margin:0in;  margin-bottom:.0001pt;  font-size:8.0pt;  font-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;;} p.MsoAcetate, li.MsoAcetate, div.MsoAcetate  {mso-style-link:&quot;Balloon Text Char&quot;;  margin:0in;  margin-bottom:.0001pt;  font-size:8.0pt;  font-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;;} p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph  {margin-top:0in;  margin-right:0in;  margin-bottom:10.0pt;  margin-left:.5in;  line-height:115%;  font-size:11.0pt;  font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;} p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst  {margin-top:0in;  margin-right:0in;  margin-bottom:0in;  margin-left:.5in;  margin-bottom:.0001pt;  line-height:115%;  font-size:11.0pt;  font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;} p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle  {margin-top:0in;  margin-right:0in;  margin-bottom:0in;  margin-left:.5in;  margin-bottom:.0001pt;  line-height:115%;  font-size:11.0pt;  font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;} p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast  {margin-top:0in;  margin-right:0in;  margin-bottom:10.0pt;  margin-left:.5in;  line-height:115%;  font-size:11.0pt;  font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;} span.TitleChar  {mso-style-name:&quot;Title Char&quot;;  mso-style-link:Title;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} span.Heading1Char  {mso-style-name:&quot;Heading 1 Char&quot;;  mso-style-link:&quot;Heading 1&quot;;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#365F91;  font-weight:bold;} span.DocumentMapChar  {mso-style-name:&quot;Document Map Char&quot;;  mso-style-link:&quot;Document Map&quot;;  font-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;;} span.BalloonTextChar  {mso-style-name:&quot;Balloon Text Char&quot;;  mso-style-link:&quot;Balloon Text&quot;;  font-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;;} .MsoPapDefault  {margin-bottom:10.0pt;  line-height:115%;} @page WordSection1  {size:8.5in 11.0in;  margin:1.0in 1.0in 1.0in 1.0in;} div.WordSection1  {page:WordSection1;}  /* List Definitions */  ol  {margin-bottom:0in;} ul  {margin-bottom:0in;} --&gt;&lt;/style&gt; &lt;/head&gt; &lt;body lang=EN-US link=blue vlink=purple&gt; &lt;div class=WordSection1&gt; &lt;p class=MsoNormal&gt;&lt;i&gt;[Please read part 1 &lt;a href=&quot;http://llorllale.blogspot.com/2013/02/the-case-of-sudden-oc4j-restarts.html&quot;&gt;here&lt;/a&gt;.]&lt;/i&gt;&lt;/p&gt; &lt;p class=MsoNormal&gt;&lt;b&gt;&lt;span style='font-size:12.0pt;line-height:115%; color:red'&gt;TL;DR: for JDK 1.5, watch your Full GC frequency with sun.rmi.dgc.server.gcInterval/sun.rmi.dgc.client.gcInterval&lt;/span&gt;&lt;/b&gt;&lt;/p&gt; &lt;p class=MsoNormal&gt;Read on for more.&lt;/p&gt; &lt;p class=MsoNormal&gt;Logging basic GC activity revealed very odd behavior:&lt;/p&gt; &lt;p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'&gt;&lt;em&gt;&lt;b&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;font-style:normal'&gt;1.&lt;span style='font:7.0pt &quot;Times New Roman&quot;'&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/em&gt;&lt;em&gt;&lt;b&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;font-style:normal'&gt;Extended full garbage collection every evening at 10 pm.&lt;/span&gt;&lt;/b&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;Looking through the logs I would reliably find a large spike in the duration of one full garbage collection cycle at the exact same hour. I still cannot ascertain the cause of this - I searched extensively and found nothing. I even went to #oracle @ freenode but got no answer. One thing I did notice while going back through the opmn.log: ping timeouts almost always occurred at this time, and, indeed, there was at least one instance when OPMN bounced the server at this hour.&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'&gt;&lt;em&gt;&lt;b&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;font-style:normal'&gt;2.&lt;span style='font:7.0pt &quot;Times New Roman&quot;'&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/em&gt;&lt;em&gt;&lt;b&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;font-style:normal'&gt;Full garbage collection approximately every ~64 seconds.&lt;/span&gt;&lt;/b&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;This one was interesting. &lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;The Full GCs ran like clockwork instead of as a response to the server's load:&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;center&gt;&lt;p class=MsoListParagraphCxSpMiddle style='text-indent:-.5in'&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-DENa1BM5SuM/UW4Df1yhrEI/AAAAAAAAANk/j9SUxIqlZdA/s1600/image001.jpg&quot; imageanchor=&quot;1&quot; &gt;&lt;img border=&quot;0&quot; src=&quot;http://1.bp.blogspot.com/-DENa1BM5SuM/UW4Df1yhrEI/AAAAAAAAANk/j9SUxIqlZdA/s320/image001.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/center&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;At first it struck me as odd that the average interval between Full GCs would be 64 seconds as opposed to 60. Looking back now the answer is obvious. More on that later.&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;Memory usage was forcefully kept in check by the constant battering of the garbage collector but at the cost of processing time available to do actual work: the JVM was losing 7.53% of its time to garbage collection. Breaking this down further:&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;div align=center&gt; &lt;table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0  style='margin-left:.5in;border-collapse:collapse;border:none'&gt; &lt;tr&gt;  &lt;td width=197 valign=top style='width:2.05in;border:solid windowtext 1.0pt;   padding:0in 5.4pt 0in 5.4pt'&gt;  &lt;p class=MsoListParagraphCxSpMiddle style='margin:0in;margin-bottom:.0001pt;   line-height:normal'&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;   font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;  &lt;/td&gt;  &lt;td width=80 valign=top style='width:60.25pt;border:solid windowtext 1.0pt;   border-left:none;padding:0in 5.4pt 0in 5.4pt'&gt;  &lt;p class=MsoListParagraphCxSpMiddle style='margin:0in;margin-bottom:.0001pt;   line-height:normal'&gt;&lt;em&gt;&lt;b&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;   font-style:normal'&gt;Young GC&lt;/span&gt;&lt;/b&gt;&lt;/em&gt;&lt;/p&gt;  &lt;/td&gt;  &lt;td width=64 valign=top style='width:48.0pt;border:solid windowtext 1.0pt;   border-left:none;padding:0in 5.4pt 0in 5.4pt'&gt;  &lt;p class=MsoListParagraphCxSpLast style='margin:0in;margin-bottom:.0001pt;   line-height:normal'&gt;&lt;em&gt;&lt;b&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;   font-style:normal'&gt;Full GC&lt;/span&gt;&lt;/b&gt;&lt;/em&gt;&lt;/p&gt;  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;  &lt;td width=197 valign=top style='width:2.05in;border:solid windowtext 1.0pt;   border-top:none;padding:0in 5.4pt 0in 5.4pt'&gt;  &lt;p class=MsoListParagraphCxSpFirst style='margin:0in;margin-bottom:.0001pt;   line-height:normal'&gt;&lt;em&gt;&lt;b&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;   font-style:normal'&gt;Avg mem. usage post gc (MB)&lt;/span&gt;&lt;/b&gt;&lt;/em&gt;&lt;/p&gt;  &lt;/td&gt;  &lt;td width=80 valign=top style='width:60.25pt;border-top:none;border-left:   none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;   padding:0in 5.4pt 0in 5.4pt'&gt;  &lt;p class=MsoListParagraphCxSpMiddle style='margin:0in;margin-bottom:.0001pt;   line-height:normal'&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;   font-style:normal'&gt;592&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;  &lt;/td&gt;  &lt;td width=64 valign=top style='width:48.0pt;border-top:none;border-left:none;   border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;   padding:0in 5.4pt 0in 5.4pt'&gt;  &lt;p class=MsoListParagraphCxSpLast style='margin:0in;margin-bottom:.0001pt;   line-height:normal'&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;   font-style:normal'&gt;539&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;  &lt;td width=197 valign=top style='width:2.05in;border:solid windowtext 1.0pt;   border-top:none;padding:0in 5.4pt 0in 5.4pt'&gt;  &lt;p class=MsoListParagraphCxSpFirst style='margin:0in;margin-bottom:.0001pt;   line-height:normal'&gt;&lt;em&gt;&lt;b&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;   font-style:normal'&gt;Total memory freed (%)&lt;/span&gt;&lt;/b&gt;&lt;/em&gt;&lt;/p&gt;  &lt;/td&gt;  &lt;td width=80 valign=top style='width:60.25pt;border-top:none;border-left:   none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;   padding:0in 5.4pt 0in 5.4pt'&gt;  &lt;p class=MsoListParagraphCxSpMiddle style='margin:0in;margin-bottom:.0001pt;   line-height:normal'&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;   font-style:normal'&gt;98.5&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;  &lt;/td&gt;  &lt;td width=64 valign=top style='width:48.0pt;border-top:none;border-left:none;   border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;   padding:0in 5.4pt 0in 5.4pt'&gt;  &lt;p class=MsoListParagraphCxSpLast style='margin:0in;margin-bottom:.0001pt;   line-height:normal'&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;   font-style:normal'&gt;1.5&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;  &lt;td width=197 valign=top style='width:2.05in;border:solid windowtext 1.0pt;   border-top:none;padding:0in 5.4pt 0in 5.4pt'&gt;  &lt;p class=MsoListParagraphCxSpFirst style='margin:0in;margin-bottom:.0001pt;   line-height:normal'&gt;&lt;em&gt;&lt;b&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;   font-style:normal'&gt;GC time spent (%)&lt;/span&gt;&lt;/b&gt;&lt;/em&gt;&lt;/p&gt;  &lt;/td&gt;  &lt;td width=80 valign=top style='width:60.25pt;border-top:none;border-left:   none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;   padding:0in 5.4pt 0in 5.4pt'&gt;  &lt;p class=MsoListParagraphCxSpMiddle style='margin:0in;margin-bottom:.0001pt;   line-height:normal'&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;   font-style:normal'&gt;3.6&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;  &lt;/td&gt;  &lt;td width=64 valign=top style='width:48.0pt;border-top:none;border-left:none;   border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;   padding:0in 5.4pt 0in 5.4pt'&gt;  &lt;p class=MsoListParagraphCxSpLast style='margin:0in;margin-bottom:.0001pt;   line-height:normal'&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;   font-style:normal'&gt;96.4&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;  &lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; &lt;/div&gt; &lt;p class=MsoListParagraphCxSpFirst&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;The numbers are clear: these Full GC cycles are not being effective at all - in fact, they look outright useless and are robbing our server of precious processing time to do actual work!&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;So what could be triggering constant full garbage collection? This puzzled me for a while.&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;I went through all the parameters being passed to the JVM at startup: nothing. I felt confident about this finding yet I decided to put a final nail in the coffin and set the &lt;/span&gt;&lt;/em&gt;&lt;em&gt;&lt;span style='font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;'&gt;-XX:+DisableExplicitGC&lt;/span&gt;&lt;/em&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;font-style:normal'&gt; flag. This would also allow me to confirm if there exists some code somewhere in the JVM's classpath calling the System.gc() function. The results were striking:&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;center&gt;&lt;p class=MsoListParagraphCxSpMiddle style='text-indent:-.5in'&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-WB7i4nrx36k/UW4EbwOEqVI/AAAAAAAAAN0/f-CDGdSHxtM/s1600/image002.jpg&quot; imageanchor=&quot;1&quot; &gt;&lt;img border=&quot;0&quot; src=&quot;http://2.bp.blogspot.com/-WB7i4nrx36k/UW4EbwOEqVI/AAAAAAAAAN0/f-CDGdSHxtM/s320/image002.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/center&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;How much server uptime was lost to garbage collection now? 0.19%. Looking good.&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;Of course, average memory usage and allocation increased - as expected - and the JVM's natural garbage collection algorithm reliably kicked in and freed enough memory.&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;b&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;Who was calling System.gc() ?&lt;/span&gt;&lt;/b&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;Good question.&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;First order of business was to review our source code. System.gc() was nowhere to be found. Next - check all dependencies explicitly declared for our projects. Decompiling them all and searching revealed 5 classes: 2 were Oracle's (weblogic, orabpel) and the other was related to Mozilla's javascript engine. A very brief attempt at figuring out all the possible paths that can lead this code to call System.gc() was very quickly aborted: this is a very difficult task, and I would be leaving out the countless other classes in the JVM's classpath.&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;I decided to dive into Oracle's KB to see what I can find. Answer: not much. Apparently, no one else was having this issue, or not many people have noticed it yet. I found quite a few articles detailing JVM troubleshooting methods, SOA Suite installation guides, etc., etc. - nothing of much use. Then, in passing, as a final note in an article liked to by another, I found mention of these uncommonly used startup parameters:&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'&gt;&lt;em&gt;&lt;span style='font-family:Symbol;font-style:normal'&gt;·&lt;span style='font:7.0pt &quot;Times New Roman&quot;'&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;sun.rmi.dgc.server.gcInterval&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.25in'&gt;&lt;em&gt;&lt;span style='font-family:Symbol;font-style:normal'&gt;·&lt;span style='font:7.0pt &quot;Times New Roman&quot;'&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;sun.rmi.dgc.client.gcInterval&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle style='margin-left:1.0in;text-indent:-.5in'&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;You can read more about them &lt;a href=&quot;http://docs.oracle.com/javase/6/docs/technotes/guides/rmi/sunrmiproperties.html&quot;&gt;here&lt;/a&gt;. The default time of 1 hour mentioned there was not always the case - &lt;a href=&quot;http://docs.oracle.com/javase/6/docs/technotes/guides/rmi/relnotes.html&quot;&gt;it used to be 1 minute&lt;/a&gt;. Our JDK was affected. &lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;The difference between those default 60 seconds and the ~64 seconds on average from the first graph above were enough to bug me - until I looked at the second graph again: the average duration of each Full GC hovered close to 4 seconds. 60 + ~4 ~= 64. :D&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;Removing the &lt;/span&gt;&lt;/em&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;'&gt;-XX:+DisableExplicitGC&lt;/span&gt;&lt;/em&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;font-style:normal'&gt; flag and adding these two above, set to 1 hour each, proved fruitful: Full GCs were mostly limited to that hourly schedule.&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpMiddle&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;p class=MsoListParagraphCxSpLast&gt;&lt;em&gt;&lt;span style='font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;; font-style:normal'&gt;Now it's just a question of figuring out the best values for our needs (or whether we need these settings at all).&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt;</content><author><name>George Aristy</name></author><category term="rmi" /><category term="jvm" /><category term="oc4j" /><category term="oracle" /><category term="soa suite" /><category term="java" /><summary type="html">[Please read part 1 here.] TL;DR: for JDK 1.5, watch your Full GC frequency with sun.rmi.dgc.server.gcInterval/sun.rmi.dgc.client.gcInterval Read on for more. Logging basic GC activity revealed very odd behavior: 1.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Extended full garbage collection every evening at 10 pm. Looking through the logs I would reliably find a large spike in the duration of one full garbage collection cycle at the exact same hour. I still cannot ascertain the cause of this - I searched extensively and found nothing. I even went to #oracle @ freenode but got no answer. One thing I did notice while going back through the opmn.log: ping timeouts almost always occurred at this time, and, indeed, there was at least one instance when OPMN bounced the server at this hour. 2.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Full garbage collection approximately every ~64 seconds. This one was interesting.  The Full GCs ran like clockwork instead of as a response to the server's load: &amp;nbsp;  &amp;nbsp; At first it struck me as odd that the average interval between Full GCs would be 64 seconds as opposed to 60. Looking back now the answer is obvious. More on that later. &amp;nbsp; Memory usage was forcefully kept in check by the constant battering of the garbage collector but at the cost of processing time available to do actual work: the JVM was losing 7.53% of its time to garbage collection. Breaking this down further: &amp;nbsp;       &amp;nbsp;      Young GC      Full GC        Avg mem. usage post gc (MB)      592      539        Total memory freed (%)      98.5      1.5        GC time spent (%)      3.6      96.4     &amp;nbsp; The numbers are clear: these Full GC cycles are not being effective at all - in fact, they look outright useless and are robbing our server of precious processing time to do actual work! &amp;nbsp; So what could be triggering constant full garbage collection? This puzzled me for a while. &amp;nbsp; I went through all the parameters being passed to the JVM at startup: nothing. I felt confident about this finding yet I decided to put a final nail in the coffin and set the -XX:+DisableExplicitGC flag. This would also allow me to confirm if there exists some code somewhere in the JVM's classpath calling the System.gc() function. The results were striking: &amp;nbsp;  &amp;nbsp; How much server uptime was lost to garbage collection now? 0.19%. Looking good. &amp;nbsp; Of course, average memory usage and allocation increased - as expected - and the JVM's natural garbage collection algorithm reliably kicked in and freed enough memory. &amp;nbsp; Who was calling System.gc() ? Good question. &amp;nbsp; First order of business was to review our source code. System.gc() was nowhere to be found. Next - check all dependencies explicitly declared for our projects. Decompiling them all and searching revealed 5 classes: 2 were Oracle's (weblogic, orabpel) and the other was related to Mozilla's javascript engine. A very brief attempt at figuring out all the possible paths that can lead this code to call System.gc() was very quickly aborted: this is a very difficult task, and I would be leaving out the countless other classes in the JVM's classpath. &amp;nbsp; I decided to dive into Oracle's KB to see what I can find. Answer: not much. Apparently, no one else was having this issue, or not many people have noticed it yet. I found quite a few articles detailing JVM troubleshooting methods, SOA Suite installation guides, etc., etc. - nothing of much use. Then, in passing, as a final note in an article liked to by another, I found mention of these uncommonly used startup parameters: ·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; sun.rmi.dgc.server.gcInterval ·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; sun.rmi.dgc.client.gcInterval &amp;nbsp; You can read more about them here. The default time of 1 hour mentioned there was not always the case - it used to be 1 minute. Our JDK was affected.  &amp;nbsp; The difference between those default 60 seconds and the ~64 seconds on average from the first graph above were enough to bug me - until I looked at the second graph again: the average duration of each Full GC hovered close to 4 seconds. 60 + ~4 ~= 64. :D &amp;nbsp; Removing the -XX:+DisableExplicitGC flag and adding these two above, set to 1 hour each, proved fruitful: Full GCs were mostly limited to that hourly schedule. &amp;nbsp; Now it's just a question of figuring out the best values for our needs (or whether we need these settings at all).</summary></entry><entry><title type="html">Vim Tip of the Day!</title><link href="http://localhost:4000/2013/04/09/vim-tip-of-day.html" rel="alternate" type="text/html" title="Vim Tip of the Day!" /><published>2013-04-09T17:26:00-04:00</published><updated>2013-04-09T17:26:00-04:00</updated><id>http://localhost:4000/2013/04/09/vim-tip-of-day</id><content type="html" xml:base="http://localhost:4000/2013/04/09/vim-tip-of-day.html">Let's say you have to upload a bunch of data to a table and let's say you need to index them with an ID key.&lt;br /&gt;&lt;br /&gt;You could just declare the column to auto-increment when creating the table in the database (or, in the case of Oracle, define a trigger/sequence combo to produce those values).&lt;br /&gt;&lt;br /&gt;... or you could just generate them beforehand in &lt;a href=&quot;http://vim.wikia.com/wiki/Insert_line_numbers&quot;&gt;Vim&lt;/a&gt; using line numbers. Yes, line numbers.&lt;br /&gt;&lt;br /&gt;Suppose you already have your insert statements set up in vim like this:  &lt;br /&gt;&lt;blockquote&gt;insert into tmp_table values (33.832,'GC',131072,18844,502464,0.1015525);&lt;br /&gt;insert into tmp_table values (38.272,'GC',149916,26475,502464,0.1751825);&lt;br /&gt;insert into tmp_table values (52.808,'GC',157547,42326,502464,0.2372075);&lt;br /&gt;insert into tmp_table values (68.815,'GC',173398,55185,633536,0.1455373);&lt;br /&gt;insert into tmp_table values (84.570,'GC',317329,74330,633536,0.1732868);&lt;br /&gt;insert into tmp_table values (167.147,'GC',307334,102686,635008,0.2086538);&lt;br /&gt;insert into tmp_table values (167.355,'Full GC',102686,101944,635008,1.8805190);&lt;br /&gt;insert into tmp_table values (184.915,'GC',338599,123368,642688,0.0918409);&lt;/blockquote&gt;Executing &lt;b&gt;%s/(/\=printf('(%d,', line('.'))/&lt;/b&gt; produces the indexes that you need (if the first column is the index field):  &lt;br /&gt;&lt;blockquote&gt;insert into tmp_table values (1,33.832,'GC',131072,18844,502464,0.1015525);&lt;br /&gt;insert into tmp_table values (2,38.272,'GC',149916,26475,502464,0.1751825);&lt;br /&gt;insert into tmp_table values (3,52.808,'GC',157547,42326,502464,0.2372075);&lt;br /&gt;insert into tmp_table values (4,68.815,'GC',173398,55185,633536,0.1455373);&lt;br /&gt;insert into tmp_table values (5,84.570,'GC',317329,74330,633536,0.1732868);&lt;br /&gt;insert into tmp_table values (6,167.147,'GC',307334,102686,635008,0.2086538);&lt;br /&gt;insert into tmp_table values (7,167.355,'Full GC',102686,101944,635008,1.8805190);&lt;br /&gt;insert into tmp_table values (8,184.915,'GC',338599,123368,642688,0.0918409);&lt;/blockquote&gt;Just one more reason to love Vim!</content><author><name>George Aristy</name></author><category term="printf" /><category term="vim" /><category term="line number" /><summary type="html">Let's say you have to upload a bunch of data to a table and let's say you need to index them with an ID key.You could just declare the column to auto-increment when creating the table in the database (or, in the case of Oracle, define a trigger/sequence combo to produce those values).... or you could just generate them beforehand in Vim using line numbers. Yes, line numbers.Suppose you already have your insert statements set up in vim like this:  insert into tmp_table values (33.832,'GC',131072,18844,502464,0.1015525);insert into tmp_table values (38.272,'GC',149916,26475,502464,0.1751825);insert into tmp_table values (52.808,'GC',157547,42326,502464,0.2372075);insert into tmp_table values (68.815,'GC',173398,55185,633536,0.1455373);insert into tmp_table values (84.570,'GC',317329,74330,633536,0.1732868);insert into tmp_table values (167.147,'GC',307334,102686,635008,0.2086538);insert into tmp_table values (167.355,'Full GC',102686,101944,635008,1.8805190);insert into tmp_table values (184.915,'GC',338599,123368,642688,0.0918409);Executing %s/(/\=printf('(%d,', line('.'))/ produces the indexes that you need (if the first column is the index field):  insert into tmp_table values (1,33.832,'GC',131072,18844,502464,0.1015525);insert into tmp_table values (2,38.272,'GC',149916,26475,502464,0.1751825);insert into tmp_table values (3,52.808,'GC',157547,42326,502464,0.2372075);insert into tmp_table values (4,68.815,'GC',173398,55185,633536,0.1455373);insert into tmp_table values (5,84.570,'GC',317329,74330,633536,0.1732868);insert into tmp_table values (6,167.147,'GC',307334,102686,635008,0.2086538);insert into tmp_table values (7,167.355,'Full GC',102686,101944,635008,1.8805190);insert into tmp_table values (8,184.915,'GC',338599,123368,642688,0.0918409);Just one more reason to love Vim!</summary></entry><entry><title type="html">Embedding a CDATA section in your BPEL Response</title><link href="http://localhost:4000/2013/03/08/embedding-cdata-section-in-your-bpel.html" rel="alternate" type="text/html" title="Embedding a CDATA section in your BPEL Response" /><published>2013-03-08T21:49:00-04:00</published><updated>2013-03-08T21:49:00-04:00</updated><id>http://localhost:4000/2013/03/08/embedding-cdata-section-in-your-bpel</id><content type="html" xml:base="http://localhost:4000/2013/03/08/embedding-cdata-section-in-your-bpel.html">&lt;html&gt; &lt;head&gt;&lt;meta http-equiv=Content-Type content=&quot;text/html; charset=windows-1252&quot;&gt;&lt;meta name=Generator content=&quot;Microsoft Word 12 (filtered)&quot;&gt;&lt;style&gt;&lt;!--  /* Font Definitions */  @font-face  {font-family:&quot;Cambria Math&quot;;  panose-1:2 4 5 3 5 4 6 3 2 4;} @font-face  {font-family:Cambria;  panose-1:2 4 5 3 5 4 6 3 2 4;} @font-face  {font-family:Calibri;  panose-1:2 15 5 2 2 2 4 3 2 4;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal  {margin-top:0in;  margin-right:0in;  margin-bottom:10.0pt;  margin-left:0in;  line-height:115%;  font-size:11.0pt;  font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;} p.MsoTitle, li.MsoTitle, div.MsoTitle  {mso-style-link:&quot;Title Char&quot;;  margin-top:0in;  margin-right:0in;  margin-bottom:15.0pt;  margin-left:0in;  border:none;  padding:0in;  font-size:26.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst  {mso-style-link:&quot;Title Char&quot;;  margin:0in;  margin-bottom:.0001pt;  border:none;  padding:0in;  font-size:26.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle  {mso-style-link:&quot;Title Char&quot;;  margin:0in;  margin-bottom:.0001pt;  border:none;  padding:0in;  font-size:26.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast  {mso-style-link:&quot;Title Char&quot;;  margin-top:0in;  margin-right:0in;  margin-bottom:15.0pt;  margin-left:0in;  border:none;  padding:0in;  font-size:26.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} a:link, span.MsoHyperlink  {color:blue;  text-decoration:underline;} a:visited, span.MsoHyperlinkFollowed  {color:purple;  text-decoration:underline;} span.TitleChar  {mso-style-name:&quot;Title Char&quot;;  mso-style-link:Title;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} .MsoPapDefault  {margin-bottom:10.0pt;  line-height:115%;} @page WordSection1  {size:8.5in 11.0in;  margin:1.0in 1.0in 1.0in 1.0in;} div.WordSection1  {page:WordSection1;} --&gt;&lt;/style&gt; &lt;/head&gt; &lt;body lang=EN-US link=blue vlink=purple&gt; &lt;div class=WordSection1&gt; &lt;p class=MsoNormal&gt;This tip might save you a few minutes.&lt;/p&gt; &lt;p class=MsoNormal&gt;A colleague recently wanted his BPEL process (Oracle SOA Suite) to return a string containing XML markup, and within that markup he needed to include a CDATA section. The requirement for returning this document as a string will perhaps be discussed in another article.&lt;/p&gt; &lt;p class=MsoNormal&gt;Short answer: it's not possible.&lt;/p&gt; &lt;p class=MsoNormal&gt;Longer answer:&lt;/p&gt; &lt;p class=MsoNormal&gt;Those of you who have some experience with [Oracle] BPEL Process development will have probably come across the &lt;i&gt;{ http://schemas.oracle.com/xpath/extension}getContentAsString()&lt;/i&gt;function. Those of you who don't: this function enables you to treat an XML structure like a string. It's the only way (that my colleague and I know of) to do this in Oracle BPEL.&lt;/p&gt; &lt;p class=MsoNormal&gt;What happens when have some XML structure with a CDATA section, pass it to &lt;i&gt;getContentAsString&lt;/i&gt; and assign it to an xsd:string ? The start and end angled brackets (&amp;quot;&amp;lt;&amp;quot; and &amp;quot;&amp;gt;&amp;quot;) pertaining to the CDATA delimiters &lt;i&gt;alone&lt;/i&gt; are replaced by their entity references (&amp;quot;&amp;amp;lt;&amp;quot; and &amp;quot;&amp;amp;gt;&amp;quot;). All other markup in the XML structure would be left intact. Why?&lt;/p&gt; &lt;p class=MsoNormal&gt;If you only witness this happening via the console audit trails, or basically through any XML parser, you are unlikely to realize that the &lt;i&gt;getContentAsString&lt;/i&gt; function actually embeds the XML structure in a CDATA element already!&lt;/p&gt; &lt;p class=MsoNormal&gt;What you would see via the online console:&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;&amp;lt;root&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                &amp;lt;ElementList&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                                &amp;lt;element1&amp;gt;data1&amp;lt;/element1&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                                &amp;lt;element2&amp;gt;data2&amp;lt;/element2&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                                &amp;lt;element3&amp;gt;&amp;amp;lt;![CDATA[ some CDATA characters ]]&amp;amp;gt;&amp;lt;/element3&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                &amp;lt;/ElementList&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal&gt;Where the element &lt;i&gt;root&lt;/i&gt; is of type xsd:string and is the node to which you're assigning the output of &lt;i&gt;getContentAsString&lt;/i&gt;.&lt;/p&gt; &lt;p class=MsoNormal&gt;But if you look at the raw message, that is, without parsing the XML data (eg.: soapUI) then you see this:&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;&amp;lt;root&amp;gt;&lt;b&gt;&lt;span style='color:red'&gt;&amp;lt;![CDATA[&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                &amp;lt;ElementList&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                                &amp;lt;element1&amp;gt;data1&amp;lt;/element1&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                                &amp;lt;element2&amp;gt;data2&amp;lt;/element2&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                                &amp;lt;element3&amp;gt;&amp;amp;lt;![CDATA[ some CDATA characters ]]&amp;amp;gt;&amp;lt;/element3&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                &amp;lt;/ElementList&amp;gt;&lt;b&gt;&lt;span style='color:red'&gt;]]&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal&gt;The &lt;a href=&quot;http://www.w3.org/TR/REC-xml/#sec-cdata-sect&quot;&gt;XML spec&lt;/a&gt; clearly states that CDATA sections cannot be nested. Hence the escaping of those angle brackets. What's more, CDATA sections are not meant to be parsed (that is the point of having CDATA sections), and that includes those escaped characters. Don't go thinking that the XML parser will see them and convert them back to angle brackets.&lt;/p&gt; &lt;p class=MsoNormal&gt;So what can you do?&lt;/p&gt; &lt;p class=MsoNormal&gt;Don't convert your structure to a string. Return a complex type. If you do so, then you can do something similar to the following in a transformation for example:&lt;/p&gt; &lt;p class=MsoNormal style='line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                &amp;lt;element3&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                                &amp;lt;xsl:text&amp;gt;&lt;b&gt;&lt;span style='color:red'&gt;&amp;lt;![CDATA[&lt;/span&gt;&lt;/b&gt;&amp;lt;![CDATA[ some CDATA characters ]]&lt;b&gt;&lt;span style='color:red'&gt;]]&amp;gt;&amp;lt;![CDATA[&lt;/span&gt;&lt;/b&gt;&amp;gt;&lt;b&gt;&lt;span style='color:red'&gt;]]&amp;gt;&lt;/span&gt;&lt;/b&gt;&amp;lt;/xsl:text&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                &amp;lt;/element3&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='line-height:normal'&gt;By putting that right angle bracket in a separate CDATA section, I avoid &amp;quot;closing&amp;quot; the first CDATA section marked in red so that I can also include those two square brackets &amp;quot;]&amp;quot; in it. The output would be something like this:&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;&amp;lt;root&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                &amp;lt;ElementList&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                                &amp;lt;element1&amp;gt;data1&amp;lt;/element1&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                                &amp;lt;element2&amp;gt;data2&amp;lt;/element2&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                                &amp;lt;element3&amp;gt;&amp;lt;![CDATA[ some CDATA characters ]]&amp;gt;&amp;lt;/element3&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;                &amp;lt;/ElementList&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='line-height:normal'&gt;However, this time the element &lt;i&gt;root&lt;/i&gt;is not of type xsd:string; instead, &lt;i&gt;root&lt;/i&gt; is now a complex type defined as the parent element of &lt;i&gt;ElementList&lt;/i&gt;, itself a complex type having &lt;i&gt;element1&lt;/i&gt;, &lt;i&gt;element2&lt;/i&gt; and &lt;i&gt;element3&lt;/i&gt; as child nodes.&lt;/p&gt; &lt;p class=MsoNormal style='line-height:normal'&gt;Hope it helps.&lt;/p&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt;</content><author><name>George Aristy</name></author><category term="soa" /><category term="cdata" /><category term="oracle soa suite" /><category term="bpel" /><summary type="html">This tip might save you a few minutes. A colleague recently wanted his BPEL process (Oracle SOA Suite) to return a string containing XML markup, and within that markup he needed to include a CDATA section. The requirement for returning this document as a string will perhaps be discussed in another article. Short answer: it's not possible. Longer answer: Those of you who have some experience with [Oracle] BPEL Process development will have probably come across the { http://schemas.oracle.com/xpath/extension}getContentAsString()function. Those of you who don't: this function enables you to treat an XML structure like a string. It's the only way (that my colleague and I know of) to do this in Oracle BPEL. What happens when have some XML structure with a CDATA section, pass it to getContentAsString and assign it to an xsd:string ? The start and end angled brackets (&amp;quot;&amp;lt;&amp;quot; and &amp;quot;&amp;gt;&amp;quot;) pertaining to the CDATA delimiters alone are replaced by their entity references (&amp;quot;&amp;amp;lt;&amp;quot; and &amp;quot;&amp;amp;gt;&amp;quot;). All other markup in the XML structure would be left intact. Why? If you only witness this happening via the console audit trails, or basically through any XML parser, you are unlikely to realize that the getContentAsString function actually embeds the XML structure in a CDATA element already! What you would see via the online console: &amp;lt;root&amp;gt;                 &amp;lt;ElementList&amp;gt;                                 &amp;lt;element1&amp;gt;data1&amp;lt;/element1&amp;gt;                                 &amp;lt;element2&amp;gt;data2&amp;lt;/element2&amp;gt;                                 &amp;lt;element3&amp;gt;&amp;amp;lt;![CDATA[ some CDATA characters ]]&amp;amp;gt;&amp;lt;/element3&amp;gt;                 &amp;lt;/ElementList&amp;gt; &amp;lt;/root&amp;gt; Where the element root is of type xsd:string and is the node to which you're assigning the output of getContentAsString. But if you look at the raw message, that is, without parsing the XML data (eg.: soapUI) then you see this: &amp;lt;root&amp;gt;&amp;lt;![CDATA[                 &amp;lt;ElementList&amp;gt;                                 &amp;lt;element1&amp;gt;data1&amp;lt;/element1&amp;gt;                                 &amp;lt;element2&amp;gt;data2&amp;lt;/element2&amp;gt;                                 &amp;lt;element3&amp;gt;&amp;amp;lt;![CDATA[ some CDATA characters ]]&amp;amp;gt;&amp;lt;/element3&amp;gt;                 &amp;lt;/ElementList&amp;gt;]]&amp;gt; &amp;lt;/root&amp;gt; The XML spec clearly states that CDATA sections cannot be nested. Hence the escaping of those angle brackets. What's more, CDATA sections are not meant to be parsed (that is the point of having CDATA sections), and that includes those escaped characters. Don't go thinking that the XML parser will see them and convert them back to angle brackets. So what can you do? Don't convert your structure to a string. Return a complex type. If you do so, then you can do something similar to the following in a transformation for example:                 &amp;lt;element3&amp;gt;                                 &amp;lt;xsl:text&amp;gt;&amp;lt;![CDATA[&amp;lt;![CDATA[ some CDATA characters ]]]]&amp;gt;&amp;lt;![CDATA[&amp;gt;]]&amp;gt;&amp;lt;/xsl:text&amp;gt;                 &amp;lt;/element3&amp;gt; By putting that right angle bracket in a separate CDATA section, I avoid &amp;quot;closing&amp;quot; the first CDATA section marked in red so that I can also include those two square brackets &amp;quot;]&amp;quot; in it. The output would be something like this: &amp;lt;root&amp;gt;                 &amp;lt;ElementList&amp;gt;                                 &amp;lt;element1&amp;gt;data1&amp;lt;/element1&amp;gt;                                 &amp;lt;element2&amp;gt;data2&amp;lt;/element2&amp;gt;                                 &amp;lt;element3&amp;gt;&amp;lt;![CDATA[ some CDATA characters ]]&amp;gt;&amp;lt;/element3&amp;gt;                 &amp;lt;/ElementList&amp;gt; &amp;lt;/root&amp;gt; However, this time the element rootis not of type xsd:string; instead, root is now a complex type defined as the parent element of ElementList, itself a complex type having element1, element2 and element3 as child nodes. Hope it helps.</summary></entry><entry><title type="html">Focus</title><link href="http://localhost:4000/2013/03/05/focus.html" rel="alternate" type="text/html" title="Focus" /><published>2013-03-05T22:05:00-04:00</published><updated>2013-03-05T22:05:00-04:00</updated><id>http://localhost:4000/2013/03/05/focus</id><content type="html" xml:base="http://localhost:4000/2013/03/05/focus.html">Focus. It's what the mind &lt;a href=&quot;http://lifehacker.com/5988460/do-less-and-focus-hard-if-youre-busy-youre-doing-something-wrong&quot;&gt;needs&lt;/a&gt;.  Meanwhile, I &lt;a href=&quot;http://llorllale.blogspot.com/2012/02/illusion-of-being-busy-while-not-being.html&quot;&gt;continue&lt;/a&gt; finding my way towards enlightenment.</content><author><name>George Aristy</name></author><summary type="html">Focus. It's what the mind needs.  Meanwhile, I continue finding my way towards enlightenment.</summary></entry><entry><title type="html">The Case of Sudden OC4J Restarts [part 1]</title><link href="http://localhost:4000/2013/02/27/the-case-of-sudden-oc4j-restarts.html" rel="alternate" type="text/html" title="The Case of Sudden OC4J Restarts [part 1]" /><published>2013-02-27T13:33:00-04:00</published><updated>2013-02-27T13:33:00-04:00</updated><id>http://localhost:4000/2013/02/27/the-case-of-sudden-oc4j-restarts</id><content type="html" xml:base="http://localhost:4000/2013/02/27/the-case-of-sudden-oc4j-restarts.html">&lt;html&gt; &lt;head&gt;&lt;meta http-equiv=Content-Type content=&quot;text/html; charset=windows-1252&quot;&gt;&lt;meta name=Generator content=&quot;Microsoft Word 12 (filtered)&quot;&gt;&lt;style&gt;&lt;!--  /* Font Definitions */  @font-face  {font-family:&quot;Cambria Math&quot;;  panose-1:2 4 5 3 5 4 6 3 2 4;} @font-face  {font-family:Cambria;  panose-1:2 4 5 3 5 4 6 3 2 4;} @font-face  {font-family:Calibri;  panose-1:2 15 5 2 2 2 4 3 2 4;} @font-face  {font-family:Tahoma;  panose-1:2 11 6 4 3 5 4 4 2 4;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal  {margin-top:0in;  margin-right:0in;  margin-bottom:10.0pt;  margin-left:0in;  line-height:115%;  font-size:11.0pt;  font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;} h1  {mso-style-link:&quot;Heading 1 Char&quot;;  margin-top:24.0pt;  margin-right:0in;  margin-bottom:0in;  margin-left:0in;  margin-bottom:.0001pt;  line-height:115%;  page-break-after:avoid;  font-size:14.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#365F91;} p.MsoTitle, li.MsoTitle, div.MsoTitle  {mso-style-link:&quot;Title Char&quot;;  margin-top:0in;  margin-right:0in;  margin-bottom:15.0pt;  margin-left:0in;  border:none;  padding:0in;  font-size:26.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst  {mso-style-link:&quot;Title Char&quot;;  margin:0in;  margin-bottom:.0001pt;  border:none;  padding:0in;  font-size:26.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle  {mso-style-link:&quot;Title Char&quot;;  margin:0in;  margin-bottom:.0001pt;  border:none;  padding:0in;  font-size:26.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast  {mso-style-link:&quot;Title Char&quot;;  margin-top:0in;  margin-right:0in;  margin-bottom:15.0pt;  margin-left:0in;  border:none;  padding:0in;  font-size:26.0pt;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} a:link, span.MsoHyperlink  {color:blue;  text-decoration:underline;} a:visited, span.MsoHyperlinkFollowed  {color:purple;  text-decoration:underline;} p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap  {mso-style-link:&quot;Document Map Char&quot;;  margin:0in;  margin-bottom:.0001pt;  font-size:8.0pt;  font-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;;} span.Heading1Char  {mso-style-name:&quot;Heading 1 Char&quot;;  mso-style-link:&quot;Heading 1&quot;;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#365F91;  font-weight:bold;} span.DocumentMapChar  {mso-style-name:&quot;Document Map Char&quot;;  mso-style-link:&quot;Document Map&quot;;  font-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;;} span.TitleChar  {mso-style-name:&quot;Title Char&quot;;  mso-style-link:Title;  font-family:&quot;Cambria&quot;,&quot;serif&quot;;  color:#17365D;  letter-spacing:.25pt;} .MsoPapDefault  {margin-bottom:10.0pt;  line-height:115%;} @page WordSection1  {size:8.5in 11.0in;  margin:1.0in 1.0in 1.0in 1.0in;} div.WordSection1  {page:WordSection1;} --&gt;&lt;/style&gt; &lt;/head&gt; &lt;body lang=EN-US link=blue vlink=purple&gt; &lt;div class=WordSection1&gt; &lt;p class=MsoNormal&gt;&lt;i&gt;[Please read part 2 &lt;a href=&quot;http://llorllale.blogspot.com/2013/04/the-case-of-sudden-oc4j-restarts-part-2.html&quot;&gt;here&lt;/a&gt;.]&lt;/i&gt;&lt;/p&gt; &lt;p class=MsoNormal&gt;Our OC4J instance would restart itself every once in a while - no culprits found looking through unix' &lt;i&gt;history&lt;/i&gt;. My next thought was to check the crontab but my user doesn't have access to that. Weighing bureaucracy (soliciting the unix admins to check it or give me access) versus pursuing other means of inquiry: &lt;b&gt;of course&lt;/b&gt; I chose the latter!&lt;/p&gt; &lt;p class=MsoNormal&gt;From the &lt;a href=&quot;http://docs.oracle.com/cd/B13597_05/core.904/b12057/intro.htm#i1015084&quot;&gt;opmn&lt;/a&gt;log file:&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;13/02/25 10:48:15 [ons-connect] Passive connection 16438,xxx.xxx.xxx.xxx,6233 missing connect&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;13/02/25 11:45:28 [ons-connect] Passive connection 1667c, xxx.xxx.xxx.xxx,6233 missing connect&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;13/02/25 12:06:18 [ons-connect] Passive connection 16751, xxx.xxx.xxx.xxx,6233 missing connect&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt;color:red'&gt;13/02/25 14:22:19 [libopmnoc4j] OC4J ping attempt timed out&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt;color:red'&gt;13/02/25 14:22:19 [libopmnoc4j] Process Ping Failed: default_group~oc4j_esbas~default_group~1 (1786977551:2786)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt;color:red'&gt;13/02/25 14:23:09 [libopmnoc4j] OC4J ping attempt timed out&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt;color:red'&gt;13/02/25 14:23:09 [libopmnoc4j] Process Ping Failed: default_group~oc4j_esbas~default_group~1 (1786977551:2786)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt;color:red'&gt;13/02/25 14:23:59 [libopmnoc4j] OC4J ping attempt timed out&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt;color:red'&gt;13/02/25 14:23:59 [libopmnoc4j] Process Ping Failed: default_group~oc4j_esbas~default_group~1 (1786977551:2786)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt;color:red'&gt;13/02/25 14:23:59 [libopmnoc4j] Process Unreachable: default_group~oc4j_esbas~default_group~1 (1786977551:2786)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt;color:red'&gt;13/02/25 14:23:59 [pm-process] Restarting Process: default_group~oc4j_esbas~default_group~1 (1786977551:2786)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt;color:red'&gt;13/02/25 14:28:59 [pm-process] Stopping Process: default_group~oc4j_esbas~default_group~1 (1786977551:2786)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt;color:red'&gt;13/02/25 14:28:59 [libopmnoc4j] Forcefully Terminating Process: default_group~oc4j_esbas~default_group~1 (1786977551:2786)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;13/02/25 14:29:01 [pm-process] Starting Process: default_group~oc4j_esbas~default_group~1 (1786977551:0)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;13/02/25 14:30:03 [pm-process] Process Alive: default_group~oc4j_esbas~default_group~1 (1786977551:9531)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal&gt;Classic Ping-Echo tactic to satisfy quality attributes related to availability in system architectures.&lt;/p&gt; &lt;p class=MsoNormal&gt;&lt;i&gt;Anything&lt;/i&gt; could be causing those ping timeouts, but at least now I know I don't have to deal with the sysadmins. Neat.&lt;/p&gt; &lt;p class=MsoNormal&gt;In the instance's message log I see a few instances of the following occurring at around the same timeframe:&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;&amp;lt;MESSAGE&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;  &amp;lt;HEADER&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;    &amp;lt;TSTZ_ORIGINATING&amp;gt;2013-02-25T14:21:57.735-04:00&amp;lt;/TSTZ_ORIGINATING&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;    &amp;lt;COMPONENT_ID&amp;gt;tip&amp;lt;/COMPONENT_ID&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;    &amp;lt;MSG_TYPE TYPE=&amp;quot;ERROR&amp;quot;&amp;gt;&amp;lt;/MSG_TYPE&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;    &amp;lt;MSG_LEVEL&amp;gt;1&amp;lt;/MSG_LEVEL&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;    &amp;lt;HOST_ID&amp;gt;hostid123&amp;lt;/HOST_ID&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;    &amp;lt;HOST_NWADDR&amp;gt;xxx.xxx.xxx.xxx&amp;lt;/HOST_NWADDR&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;    &amp;lt;MODULE_ID&amp;gt;esb.server.dispatch.agent&amp;lt;/MODULE_ID&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;    &amp;lt;THREAD_ID&amp;gt;90&amp;lt;/THREAD_ID&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;    &amp;lt;USER_ID&amp;gt;abcde&amp;lt;/USER_ID&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;  &amp;lt;/HEADER&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;  &amp;lt;CORRELATION_DATA&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;    &amp;lt;EXEC_CONTEXT_ID&amp;gt;&amp;lt;UNIQUE_ID&amp;gt;1697007412:56432:1360980064744:1021&amp;lt;/UNIQUE_ID&amp;gt;&amp;lt;SEQ&amp;gt;0&amp;lt;/SEQ&amp;gt;&amp;lt;/EXEC_CONTEXT_ID&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;  &amp;lt;/CORRELATION_DATA&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;  &amp;lt;PAYLOAD&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;    &amp;lt;MSG_TEXT&amp;gt;Failed to commit transaction&amp;lt;/MSG_TEXT&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;    &amp;lt;SUPPL_DETAIL&amp;gt;&amp;lt;![CDATA[oracle.tip.esb.server.common.exceptions.BusinessEventRetriableException: Failed to commit transaction; transaction status is &amp;quot;6&amp;quot;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        at oracle.tip.esb.server.common.JTAHelper.commitTransaction(JTAHelper.java:216)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        at oracle.tip.esb.server.dispatch.agent.ESBWork.run(ESBWork.java:155)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        at oracle.j2ee.connector.work.WorkWrapper.runTargetWork(WorkWrapper.java:242)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        at oracle.j2ee.connector.work.WorkWrapper.doWork(WorkWrapper.java:215)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        at oracle.j2ee.connector.work.WorkWrapper.run(WorkWrapper.java:190)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:825)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        at java.lang.Thread.run(Thread.java:595)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;Caused by: javax.transaction.RollbackException: Timed out&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        at com.evermind.server.ApplicationServerTransaction.checkForRollbackOnlyWhileInCommit(ApplicationServerTransaction.java:664)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        at com.evermind.server.ApplicationServerTransaction.doCommit(ApplicationServerTransaction.java:273)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        at com.evermind.server.ApplicationServerTransaction.commit(ApplicationServerTransaction.java:162)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        at com.evermind.server.ApplicationServerTransactionManager.commit(ApplicationServerTransactionManager.java:475)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        at oracle.tip.esb.server.common.JTAHelper.commitTransaction(JTAHelper.java:214)&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;        ... 6 more&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;]]&amp;gt;&amp;lt;/SUPPL_DETAIL&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;  &amp;lt;/PAYLOAD&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in;line-height:normal'&gt;&lt;span style='font-size:9.0pt'&gt;&amp;lt;/MESSAGE&amp;gt;&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal&gt;This message eventually turned out to be a dead end. My immediate hypothesis is that the server is under load and thus transactions are starting to hang and being rolled back, as well as being unable to respond to OPMN's ping requests. Threads can get stuck due to many different causes, such as waiting for some I/O to complete, or entering a loop without exit condition, or competing for shared resources with other threads, etc. To find out what exactly was happening, I first need to identify the components involved in this transaction. And this is where I stumbled on my first roadblock. &lt;i&gt;How&lt;/i&gt; do I trace this message back to a component. It is obvious that the &lt;i&gt;CORRELATION_DATA&lt;/i&gt;element is somehow pointing me in some direction, but how do I interpret its &lt;i&gt;UNIQUE_ID&lt;/i&gt;? I have yet to find a clear description of this element's contents. From &lt;a href=&quot;http://docs.oracle.com/cd/B14099_19/core.1012/b13995/log.htm#i1039644&quot;&gt;Oracle&lt;/a&gt;:&lt;/p&gt; &lt;p class=MsoNormal style='margin-left:.5in'&gt;&lt;span style='font-size:9.0pt; line-height:115%'&gt;Using ODL, diagnostic messages are written to log files using XML format and each message includes a HEADER element containing information about the message, &lt;b&gt;optionally a CORRELATION_DATA element containing information to assist in correlating messages across components&lt;/b&gt;, and a PAYLOAD element containing the message text including optional arguments and associated values.&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal&gt;... and that's it. My hypothesis is that the &lt;i&gt;UNIQUE_ID&lt;/i&gt;element's text value is a string of values delimited by colons, and each value serves as a unique identifier for every instance of any components involved in the handling of this message or operation. So far I have not been able to prove this. I haven't conclusively linked any of those values to any BPEL or ESB instance ID. If anyone out there can point to a clear description of the &lt;i&gt;CORRELATION_DATA&lt;/i&gt;element and what those values above would  mean, it would be very welcome!&lt;/p&gt; &lt;p class=MsoNormal&gt;Next thought: monitor GC performance. It is possible that the garbage collecting mechanism is occasionally interfering with the OC4J instance's ability to respond to OPMN's ping requests. If, say, a full garbage collection is taking place (which can potentially last up to tens of seconds) while OPMN's ping arrives, then yes, a timeout can definitely happen. &lt;/p&gt; &lt;p class=MsoNormal&gt;Which is why I have added these flags to the process' &lt;i&gt;java-options&lt;/i&gt;in opmn.xml:&lt;/p&gt; &lt;p class=MsoNormal&gt;                &lt;span style='font-size:9.0pt;line-height: 115%'&gt;-XX:-PrintGCDetails -XX:-PrintGCTimeStamps -Xloggc:gc.log&lt;/span&gt;&lt;/p&gt; &lt;p class=MsoNormal&gt;Now it's just a matter of waiting for the next event...&lt;/p&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt;</content><author><name>George Aristy</name></author><summary type="html">[Please read part 2 here.] Our OC4J instance would restart itself every once in a while - no culprits found looking through unix' history. My next thought was to check the crontab but my user doesn't have access to that. Weighing bureaucracy (soliciting the unix admins to check it or give me access) versus pursuing other means of inquiry: of course I chose the latter! From the opmnlog file: 13/02/25 10:48:15 [ons-connect] Passive connection 16438,xxx.xxx.xxx.xxx,6233 missing connect 13/02/25 11:45:28 [ons-connect] Passive connection 1667c, xxx.xxx.xxx.xxx,6233 missing connect 13/02/25 12:06:18 [ons-connect] Passive connection 16751, xxx.xxx.xxx.xxx,6233 missing connect 13/02/25 14:22:19 [libopmnoc4j] OC4J ping attempt timed out 13/02/25 14:22:19 [libopmnoc4j] Process Ping Failed: default_group~oc4j_esbas~default_group~1 (1786977551:2786) 13/02/25 14:23:09 [libopmnoc4j] OC4J ping attempt timed out 13/02/25 14:23:09 [libopmnoc4j] Process Ping Failed: default_group~oc4j_esbas~default_group~1 (1786977551:2786) 13/02/25 14:23:59 [libopmnoc4j] OC4J ping attempt timed out 13/02/25 14:23:59 [libopmnoc4j] Process Ping Failed: default_group~oc4j_esbas~default_group~1 (1786977551:2786) 13/02/25 14:23:59 [libopmnoc4j] Process Unreachable: default_group~oc4j_esbas~default_group~1 (1786977551:2786) 13/02/25 14:23:59 [pm-process] Restarting Process: default_group~oc4j_esbas~default_group~1 (1786977551:2786) 13/02/25 14:28:59 [pm-process] Stopping Process: default_group~oc4j_esbas~default_group~1 (1786977551:2786) 13/02/25 14:28:59 [libopmnoc4j] Forcefully Terminating Process: default_group~oc4j_esbas~default_group~1 (1786977551:2786) 13/02/25 14:29:01 [pm-process] Starting Process: default_group~oc4j_esbas~default_group~1 (1786977551:0) 13/02/25 14:30:03 [pm-process] Process Alive: default_group~oc4j_esbas~default_group~1 (1786977551:9531) Classic Ping-Echo tactic to satisfy quality attributes related to availability in system architectures. Anything could be causing those ping timeouts, but at least now I know I don't have to deal with the sysadmins. Neat. In the instance's message log I see a few instances of the following occurring at around the same timeframe: &amp;lt;MESSAGE&amp;gt;   &amp;lt;HEADER&amp;gt;     &amp;lt;TSTZ_ORIGINATING&amp;gt;2013-02-25T14:21:57.735-04:00&amp;lt;/TSTZ_ORIGINATING&amp;gt;     &amp;lt;COMPONENT_ID&amp;gt;tip&amp;lt;/COMPONENT_ID&amp;gt;     &amp;lt;MSG_TYPE TYPE=&amp;quot;ERROR&amp;quot;&amp;gt;&amp;lt;/MSG_TYPE&amp;gt;     &amp;lt;MSG_LEVEL&amp;gt;1&amp;lt;/MSG_LEVEL&amp;gt;     &amp;lt;HOST_ID&amp;gt;hostid123&amp;lt;/HOST_ID&amp;gt;     &amp;lt;HOST_NWADDR&amp;gt;xxx.xxx.xxx.xxx&amp;lt;/HOST_NWADDR&amp;gt;     &amp;lt;MODULE_ID&amp;gt;esb.server.dispatch.agent&amp;lt;/MODULE_ID&amp;gt;     &amp;lt;THREAD_ID&amp;gt;90&amp;lt;/THREAD_ID&amp;gt;     &amp;lt;USER_ID&amp;gt;abcde&amp;lt;/USER_ID&amp;gt;   &amp;lt;/HEADER&amp;gt;   &amp;lt;CORRELATION_DATA&amp;gt;     &amp;lt;EXEC_CONTEXT_ID&amp;gt;&amp;lt;UNIQUE_ID&amp;gt;1697007412:56432:1360980064744:1021&amp;lt;/UNIQUE_ID&amp;gt;&amp;lt;SEQ&amp;gt;0&amp;lt;/SEQ&amp;gt;&amp;lt;/EXEC_CONTEXT_ID&amp;gt;   &amp;lt;/CORRELATION_DATA&amp;gt;   &amp;lt;PAYLOAD&amp;gt;     &amp;lt;MSG_TEXT&amp;gt;Failed to commit transaction&amp;lt;/MSG_TEXT&amp;gt;     &amp;lt;SUPPL_DETAIL&amp;gt;&amp;lt;![CDATA[oracle.tip.esb.server.common.exceptions.BusinessEventRetriableException: Failed to commit transaction; transaction status is &amp;quot;6&amp;quot;         at oracle.tip.esb.server.common.JTAHelper.commitTransaction(JTAHelper.java:216)         at oracle.tip.esb.server.dispatch.agent.ESBWork.run(ESBWork.java:155)         at oracle.j2ee.connector.work.WorkWrapper.runTargetWork(WorkWrapper.java:242)         at oracle.j2ee.connector.work.WorkWrapper.doWork(WorkWrapper.java:215)         at oracle.j2ee.connector.work.WorkWrapper.run(WorkWrapper.java:190)         at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:825)         at java.lang.Thread.run(Thread.java:595) Caused by: javax.transaction.RollbackException: Timed out         at com.evermind.server.ApplicationServerTransaction.checkForRollbackOnlyWhileInCommit(ApplicationServerTransaction.java:664)         at com.evermind.server.ApplicationServerTransaction.doCommit(ApplicationServerTransaction.java:273)         at com.evermind.server.ApplicationServerTransaction.commit(ApplicationServerTransaction.java:162)         at com.evermind.server.ApplicationServerTransactionManager.commit(ApplicationServerTransactionManager.java:475)         at oracle.tip.esb.server.common.JTAHelper.commitTransaction(JTAHelper.java:214)         ... 6 more ]]&amp;gt;&amp;lt;/SUPPL_DETAIL&amp;gt;   &amp;lt;/PAYLOAD&amp;gt; &amp;lt;/MESSAGE&amp;gt; This message eventually turned out to be a dead end. My immediate hypothesis is that the server is under load and thus transactions are starting to hang and being rolled back, as well as being unable to respond to OPMN's ping requests. Threads can get stuck due to many different causes, such as waiting for some I/O to complete, or entering a loop without exit condition, or competing for shared resources with other threads, etc. To find out what exactly was happening, I first need to identify the components involved in this transaction. And this is where I stumbled on my first roadblock. How do I trace this message back to a component. It is obvious that the CORRELATION_DATAelement is somehow pointing me in some direction, but how do I interpret its UNIQUE_ID? I have yet to find a clear description of this element's contents. From Oracle: Using ODL, diagnostic messages are written to log files using XML format and each message includes a HEADER element containing information about the message, optionally a CORRELATION_DATA element containing information to assist in correlating messages across components, and a PAYLOAD element containing the message text including optional arguments and associated values. ... and that's it. My hypothesis is that the UNIQUE_IDelement's text value is a string of values delimited by colons, and each value serves as a unique identifier for every instance of any components involved in the handling of this message or operation. So far I have not been able to prove this. I haven't conclusively linked any of those values to any BPEL or ESB instance ID. If anyone out there can point to a clear description of the CORRELATION_DATAelement and what those values above would  mean, it would be very welcome! Next thought: monitor GC performance. It is possible that the garbage collecting mechanism is occasionally interfering with the OC4J instance's ability to respond to OPMN's ping requests. If, say, a full garbage collection is taking place (which can potentially last up to tens of seconds) while OPMN's ping arrives, then yes, a timeout can definitely happen.  Which is why I have added these flags to the process' java-optionsin opmn.xml:                 -XX:-PrintGCDetails -XX:-PrintGCTimeStamps -Xloggc:gc.log Now it's just a matter of waiting for the next event...</summary></entry></feed>
